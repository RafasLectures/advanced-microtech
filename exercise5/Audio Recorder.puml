@startuml
'https://plantuml.com/activity-diagram-beta
|a| Infinite Loop
|b| PWM Interrupt
|c| ADC Interrupt

fork
|a|
-[hidden]->
start

:Initialize Microcontroller and Peripherals;

partition Infinite loop{

repeat
 :Triggers read/write from/to flash;
 if(transferring data) then (false)
     :Sample external ADC
      to get joystick values;
      :Pass ADC to joystick to know
      which event was received;
      :Notify menu in case of event;
      :Notify memory manager if action
      record or play;
 else (true)
     if (Data ready) then (true)
        if(Recording) then (true)
             :Trigger write of
             half of buffer to flash;
        else (false)
            :Trigger read of next
             data point from flash;
            :Calculate value of next PWM
            duty cycle;
        endif
        :In case transfer is over
         stop PWM/ADC that
         have the interrupt;
        :Reset notification variable;
     else (false)
    endif
endif

repeat while (true) is (true)

}
stop
fork again
|b|
-[hidden]->
start
:Update duty cycle;
:Notify infinite loop of
that duty cycle was updated
and now waiting for new
duty cycle;
stop

fork again
|c|
-[hidden]->
start
floating note
ADC is configured to use DTC, so it
is always sampling and writing to a buffer (all in hardware,
no need to sample in software).
Time for one sample is 77us.
The buffer has 50 positions and
the ADC is configured to have two-block
conversions. So after half of the buffer has been filled
the ADC gives an interrupt
endnote

:Notify infinite loop of
 that half of the buffer
 has been filled with new
 data.;
stop


@enduml